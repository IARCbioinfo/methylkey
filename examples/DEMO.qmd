---
title: "DEMO"
format: 
  html :
    code-fold: false
    code-summary: "Show the code"
    code-tools: true
    toc: true
    toc-location: left
    toc-title: Results
    toc-depth: 4
    page-layout: full
    lightbox: true
    self-contained: true
keep-md: true
editor: visual
theme:
  light: cosmo
  dark: darkly
execute:
  warning: false
  error: false
params:
  idat: "idat/"
  sampleSheet: "sampleSheet.txt"
  prepcode : "QCDPB"
  groups : !expr c("Group","Sentrix_ID")
  genome : "hg38"
---

```{R setup}
library(DT)
library(knitr)
library(methylkey)
```

```{r annotation}
annot<-readr::read_tsv("https://github.com/zhou-lab/InfiniumAnnotationV1/raw/main/Anno/EPICv2/EPICv2.hg38.manifest.gencode.v41.tsv.gz")
```

# SampleSheet

Here is where you load your sample sheet, select the relevant columns, filter out unnecessary data, harmonize names, and ensure data integrity.<br/> Mandatory columns include "samples" and "barcode," and you should also have at least one column for your variables of interest. Avoid using spaces and special characters in the column names and values. Verify that all columns are properly identified as follows:

::: callout-caution
Ensure that columns meant to identify samples have unique values and contain only alphanumeric characters.
:::

::: callout-caution
Use numeric data types for continuous variables.
:::

::: callout-caution
Employ the factor data type for discrete variables.
:::

```{r sampleSheet}
sampleSheet <- normalizePath(params$sampleSheet) %>% read_delim()
sampleSheet %>% DT::datatable()
```

# Dataset QCs

Run the sesame pipeline to load idats, normalise betas and generate qcs.

```{R read_idats}
meth <- sesame2Betas(params$idat, prep = params$prepcode, sampleSheet=sampleSheet, na=0.2, ncore=4)
qcs  <- metadata(meth)$qcs
```

{{< include qcs.qmd >}}

------------------------------------------------------------------------

## Group Control

In the Group Control step, multidimensional statistical methods such as Multidimensional Scaling (MDS) and Principal Component Analysis (PCA) are employed to visualize and assess the variability within the data. The primary objectives include evaluating differences between groups and identifying potential batch effects.

```{r groupControl}
# get mvalues with only winsorized correction, but remove XY chromosomes
methM<- getMvals(meth,  grp="Group", sva=NULL, win=TRUE, sex=FALSE)
mvals <- getMvals(methM)
pdata <- colData(methM) %>% dplyr::select(samples,Group,sentrix_position,sentrix_id)
```

::: callout-warning
In this analysis, the primary variable of interest is "Group," and deltabetas will be calculated accordingly. If you intend to utilize another variable for your model, it is necessary to call getMvals again to ensure proper calculation and alignment with the chosen variable.
:::

{{< include group.qmd >}}

------------------------------------------------------------------------

## Data Correction

In the Data Correction step, we aim to mitigate batch effects, which are systematic variations in data introduced during sample processing or experimental procedures. To address batch effects, we employ the Surrogate Variable Analysis (SVA) method.

```{R correction}
methM <- getMvals(meth, grp="Group", sva="~Group", win=TRUE, sex=FALSE, sentrix2remove=list() )
mvals <- getMvals(methM)
```

{{< include group.qmd >}}

------------------------------------------------------------------------

We've observed that there's no significant batch effect requiring correction here, especially considering that the sva method effectively eliminates all variability. Hence, we'll proceed with the analysis using the uncorrected data.

```{R C_Mvals, echo=TRUE}
methM <- readRDS("methM.rds")
mvals <- getMvals(methM)
```

------------------------------------------------------------------------

# Models

::: callout-note
In this section, we employ linear regression analysis to assess differences between groups and identify probes that exhibit differential methylation patterns. Linear regression allows us to evaluate the association between methylation levels (dependent variable) and group membership or other covariates (independent variables), while accounting for potential confounding factors.
:::

```{r mvals2}
methM <- readRDS("methM.rds")
```

## Group, intercept=117low

The model assesses the orientation, amplitude, and significance of the differences in methylation levels between the reference group and each of the other groups.

```{r}
mrs<-MethylResultSet(
  se=methM,
  model="~Group",
  intercept="low",
  method="ls"
)
intercept="low" # required by dmps.qmd
mrs@manifest=DataFrame(left_join(as_tibble(mrs@manifest),annot, by="Probe_ID")) # annotation
result <- getResults( mrs,"grouphigh",tools=c("dmrcate","ipdmr") ) # calculate dmrs and return a dataFrame
```

{{< include dmps.qmd >}}

## Group, high_vs_low (DMRS)

{{< include dmrs.qmd >}}

------------------------------------------------------------------------

## Group, intercept=Normal

The model assesses the orientation, amplitude, and significance of the differences in methylation levels between the reference group and each of the other groups.

```{r}
mrs<-MethylResultSet(
  se=methM,
  model="~Group",
  intercept="Normal",
  method="ls"
)
intercept="Normal"
mrs@manifest=DataFrame(left_join(as_tibble(mrs@manifest),annot, by="Probe_ID")) # annotation
result <- getResults( mrs,"grouphigh",tools=c("dmrcate","ipdmr") ) # calculate dmrs and return a dataFrame
```

{{< include dmps.qmd >}}

------------------------------------------------------------------------

# Session

```{r}
sessionInfo()
```
